<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:beans="http://www.springframework.org/schema/beans" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <description>Spring shiro 配置</description>
    <beans:beans profile="dev">
        <!-- 缓存管理器 使用Ehcache实现 -->
        <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
            <property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache.xml"/>
        </bean>

        <bean id="userRealm" class="com.zzc.common.security.service.ShiroRealm">
            <property name="cachingEnabled" value="true"/>
            <property name="authenticationCachingEnabled" value="true"/>
            <property name="authenticationCacheName" value="authenticationCache"/>
            <property name="authorizationCachingEnabled" value="true"/>
            <property name="authorizationCacheName" value="authorizationCache"/>
            <!--<property name="credentialsMatcher" value="shaHashedCredentialsMatcher"/>-->
        </bean>

        <bean id="shaHashedCredentialsMatcher"
              class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
            <property name="hashAlgorithmName" value="SHA-512"/>
            <property name="hashIterations" value="1024"/>
            <property name="storedCredentialsHexEncoded" value="false"/>
        </bean>

        <!-- 会话ID生成器 -->
        <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

        <!-- 会话Cookie模板 -->
        <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
            <constructor-arg value="sid"/>
            <property name="httpOnly" value="true"/>
            <property name="maxAge" value="180000"/>
        </bean>



        <bean id="sessionDAO" class="com.zzc.common.security.dao.SessionDao">
        </bean>

        <!-- 会话验证调度器 -->
        <bean id="sessionValidationScheduler"
              class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
            <property name="sessionValidationInterval" value="300000"/>
            <property name="sessionManager" ref="sessionManager"/>
        </bean>

        <!-- 会话管理器 -->
        <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
            <property name="globalSessionTimeout" value="300000"/>
            <property name="deleteInvalidSessions" value="true"/>
            <property name="sessionValidationSchedulerEnabled" value="true"/>
            <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
            <property name="sessionDAO" ref="sessionDAO"/>
            <property name="sessionIdCookieEnabled" value="true"/>
            <property name="sessionIdCookie" ref="sessionIdCookie"/>
        </bean>

        <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
        <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
            <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
            <property name="arguments" ref="securityManager"/>
        </bean>

        <!-- 安全管理器 -->
        <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
            <property name="realms">
                <list>
                    <ref bean="userRealm"/>
                </list>
            </property>
            <property name="sessionManager" ref="sessionManager"/>
            <!--
                    <property name="cacheManager" ref="cacheManager"/>
            -->
        </bean>
        <!-- 基于Form表单的身份验证过滤器 -->
        <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
            <property name="securityManager" ref="securityManager"/>
            <property name="unauthorizedUrl" value="/403"/>
            <!-- 自定义filter -->
            <property name="filters">
                <util:map>
                    <entry key="anyRolesForSys" value-ref="anyRolesForSysFilter"/>
                    <entry key="anyRolesForShop" value-ref="anyRolesForShopFilter"/>
                    <entry key="anyRolesForSupply" value-ref="anyRolesForSupplyFilter"/>
                </util:map>
            </property>

            <!-- Shiro连接约束配置,即过滤链的定义 -->
            <property name="filterChainDefinitions">
                <value>


                </value>
            </property>
        </bean>

        <!-- Shiro生命周期处理器, 保证实现了Shiro内部lifecycle函数的bean执行 -->
        <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
        <!-- 后台过滤器 -->
        <bean id="anyRolesForSysFilter" class="com.zzc.common.security.web.AnyRolesAuthenticationFilter">
            <property name="loginUrl" value="/sysmgr/login"/>
        </bean>
        <!-- 供应商平台过滤 -->
        <bean id="anyRolesForSupplyFilter" class="com.zzc.common.security.web.AnyRolesAuthenticationFilter">
            <property name="loginUrl" value="/supply/login"/>
        </bean>
        <!-- 前台电商过滤器 -->
        <bean id="anyRolesForShopFilter" class="com.zzc.common.security.web.AnyRolesAuthenticationFilter">
            <property name="loginUrl" value="/shop/login"/>
        </bean>
    </beans:beans>
    <beans:beans profile="test">
        <!-- 缓存管理器 使用Ehcache实现 -->
        <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
            <property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache.xml"/>
        </bean>

        <bean id="userRealm" class="com.zzc.common.security.service.ShiroRealm">
            <property name="cachingEnabled" value="true"/>
            <property name="authenticationCachingEnabled" value="true"/>
            <property name="authenticationCacheName" value="authenticationCache"/>
            <property name="authorizationCachingEnabled" value="true"/>
            <property name="authorizationCacheName" value="authorizationCache"/>
            <!--<property name="credentialsMatcher" value="shaHashedCredentialsMatcher"/>-->
        </bean>

        <bean id="shaHashedCredentialsMatcher"
              class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
            <property name="hashAlgorithmName" value="SHA-512"/>
            <property name="hashIterations" value="1024"/>
            <property name="storedCredentialsHexEncoded" value="false"/>
        </bean>

        <!-- 会话ID生成器 -->
        <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

        <!-- 会话Cookie模板 -->
        <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
            <constructor-arg value="sid"/>
            <property name="httpOnly" value="true"/>
            <property name="maxAge" value="180000"/>
        </bean>



        <bean id="sessionDAO" class="com.zzc.common.security.dao.SessionDao">
        </bean>

        <!-- 会话验证调度器 -->
        <bean id="sessionValidationScheduler"
              class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
            <property name="sessionValidationInterval" value="1800000"/>
            <property name="sessionManager" ref="sessionManager"/>
        </bean>

        <!-- 会话管理器 -->
        <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
            <property name="globalSessionTimeout" value="1800000"/>
            <property name="deleteInvalidSessions" value="true"/>
            <property name="sessionValidationSchedulerEnabled" value="true"/>
            <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
            <property name="sessionDAO" ref="sessionDAO"/>
            <property name="sessionIdCookieEnabled" value="true"/>
            <property name="sessionIdCookie" ref="sessionIdCookie"/>
        </bean>

        <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
        <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
            <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
            <property name="arguments" ref="securityManager"/>
        </bean>

        <!-- 安全管理器 -->
        <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
            <property name="realms">
                <list>
                    <ref bean="userRealm"/>
                </list>
            </property>
            <property name="sessionManager" ref="sessionManager"/>
            <!--
                    <property name="cacheManager" ref="cacheManager"/>
            -->
        </bean>
        <!-- 基于Form表单的身份验证过滤器 -->
        <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
            <property name="securityManager" ref="securityManager"/>
            <property name="unauthorizedUrl" value="/403"/>
            <!-- 自定义filter -->
            <property name="filters">
                <util:map>
                    <entry key="anyRolesForSys" value-ref="anyRolesForSysFilter"/>
                    <entry key="anyRolesForShop" value-ref="anyRolesForShopFilter"/>
                    <entry key="anyRolesForSupply" value-ref="anyRolesForSupplyFilter"/>
                </util:map>
            </property>

            <!-- Shiro连接约束配置,即过滤链的定义 -->
            <property name="filterChainDefinitions">
                <value>

                </value>
            </property>
        </bean>

        <!-- Shiro生命周期处理器, 保证实现了Shiro内部lifecycle函数的bean执行 -->
        <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
        <!-- 后台过滤器 -->
        <bean id="anyRolesForSysFilter" class="com.zzc.common.security.web.AnyRolesAuthenticationFilter">
            <property name="loginUrl" value="/sysmgr/login"/>
        </bean>
        <!-- 供应商平台过滤 -->
        <bean id="anyRolesForSupplyFilter" class="com.zzc.common.security.web.AnyRolesAuthenticationFilter">
            <property name="loginUrl" value="/supply/login"/>
        </bean>
        <!-- 前台电商过滤器 -->
        <bean id="anyRolesForShopFilter" class="com.zzc.common.security.web.AnyRolesAuthenticationFilter">
            <property name="loginUrl" value="/shop/login"/>
        </bean>
    </beans:beans>

    <beans:beans profile="product">
        <!-- 缓存管理器 使用Ehcache实现 -->
        <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
            <property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache.xml"/>
        </bean>

        <bean id="userRealm" class="com.zzc.common.security.service.ShiroRealm">
            <property name="cachingEnabled" value="true"/>
            <property name="authenticationCachingEnabled" value="true"/>
            <property name="authenticationCacheName" value="authenticationCache"/>
            <property name="authorizationCachingEnabled" value="true"/>
            <property name="authorizationCacheName" value="authorizationCache"/>
            <!--<property name="credentialsMatcher" value="shaHashedCredentialsMatcher"/>-->
        </bean>

        <bean id="shaHashedCredentialsMatcher"
              class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
            <property name="hashAlgorithmName" value="SHA-512"/>
            <property name="hashIterations" value="1024"/>
            <property name="storedCredentialsHexEncoded" value="false"/>
        </bean>

        <!-- 会话ID生成器 -->
        <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

        <!-- 会话Cookie模板 -->
        <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
            <constructor-arg value="sid"/>
            <property name="httpOnly" value="true"/>
            <property name="maxAge" value="180000"/>
        </bean>



        <bean id="sessionDAO" class="com.zzc.common.security.dao.SessionDao">
        </bean>

        <!-- 会话验证调度器 -->
        <bean id="sessionValidationScheduler"
              class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
            <property name="sessionValidationInterval" value="1800000"/>
            <property name="sessionManager" ref="sessionManager"/>
        </bean>

        <!-- 会话管理器 -->
        <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
            <property name="globalSessionTimeout" value="1800000"/>
            <property name="deleteInvalidSessions" value="true"/>
            <property name="sessionValidationSchedulerEnabled" value="true"/>
            <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
            <property name="sessionDAO" ref="sessionDAO"/>
            <property name="sessionIdCookieEnabled" value="true"/>
            <property name="sessionIdCookie" ref="sessionIdCookie"/>
        </bean>

        <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
        <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
            <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
            <property name="arguments" ref="securityManager"/>
        </bean>

        <!-- 安全管理器 -->
        <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
            <property name="realms">
                <list>
                    <ref bean="userRealm"/>
                </list>
            </property>
            <property name="sessionManager" ref="sessionManager"/>
            <!--
                    <property name="cacheManager" ref="cacheManager"/>
            -->
        </bean>
        <!-- 基于Form表单的身份验证过滤器 -->
        <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
            <property name="securityManager" ref="securityManager"/>
            <property name="unauthorizedUrl" value="/403"/>
            <!-- 自定义filter -->
            <property name="filters">
                <util:map>
                    <entry key="anyRolesForSys" value-ref="anyRolesForSysFilter"/>
                    <entry key="anyRolesForShop" value-ref="anyRolesForShopFilter"/>
                    <entry key="anyRolesForSupply" value-ref="anyRolesForSupplyFilter"/>
                </util:map>
            </property>

            <!-- Shiro连接约束配置,即过滤链的定义 -->
            <property name="filterChainDefinitions">
                <value>

                </value>
            </property>
        </bean>

        <!-- Shiro生命周期处理器, 保证实现了Shiro内部lifecycle函数的bean执行 -->
        <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
        <!-- 后台过滤器 -->
        <bean id="anyRolesForSysFilter" class="com.zzc.common.security.web.AnyRolesAuthenticationFilter">
            <property name="loginUrl" value="/sysmgr/login"/>
        </bean>
        <!-- 供应商平台过滤 -->
        <bean id="anyRolesForSupplyFilter" class="com.zzc.common.security.web.AnyRolesAuthenticationFilter">
            <property name="loginUrl" value="/supply/login"/>
        </bean>
        <!-- 前台电商过滤器 -->
        <bean id="anyRolesForShopFilter" class="com.zzc.common.security.web.AnyRolesAuthenticationFilter">
            <property name="loginUrl" value="/shop/login"/>
        </bean>
    </beans:beans>


</beans>